name: Deploy Real Estate Scraper

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      REQUEST_DELAY: ${{ secrets.REQUEST_DELAY }}
      MAX_RETRIES: ${{ secrets.MAX_RETRIES }}
      LOGGING_LEVEL: ${{ secrets.LOGGING_LEVEL }}
      SCRAPER_PAGES: ${{ secrets.SCRAPER_PAGES }}
      BRIGHT_DATA_USERNAME: ${{ secrets.BRIGHT_DATA_USERNAME }}
      BRIGHT_DATA_PASSWORD: ${{ secrets.BRIGHT_DATA_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H "${{ secrets.SERVER_IP }}" >> ~/.ssh/known_hosts

      - name: Configure system and install Python
        run: |
          # Create system preparation script
          cat > /tmp/prepare_system.sh << 'EOL'
          #!/bin/bash
          set -e
          
          # Install required packages
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
          
          # Add Python repository
          add-apt-repository -y ppa:deadsnakes/ppa
          
          # Install Python 3.10
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y python3.10 python3.10-venv python3.10-dev python3-pip
          
          # Create required directories
          mkdir -p /var/www/scraper
          chown -R ${{ secrets.SERVER_USER }}:${{ secrets.SERVER_USER }} /var/www/scraper
          EOL
          
          # Copy and execute the preparation script
          scp -i ~/.ssh/deploy_key /tmp/prepare_system.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/tmp/
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "sudo bash /tmp/prepare_system.sh"
          
          # Clean up
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "rm -f /tmp/prepare_system.sh"
          
          # Verify Python installation
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "python3.10 --version"

      - name: Deploy application files
        run: |
          tar czf deploy.tar.gz \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='*.pyc' \
            --exclude='__pycache__' \
            LICENSE README.md main.py bright_data_proxy.py requirements.txt schema.sql monitoring.sql \
            scrapers/

          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} 'mkdir -p /var/www/scraper/new'
          scp -i ~/.ssh/deploy_key deploy.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/var/www/scraper/new/
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} '
            cd /var/www/scraper/new && 
            tar xzf deploy.tar.gz &&
            rm deploy.tar.gz
          '

      - name: Setup Python environment
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} '
            cd /var/www/scraper/new
            python3.10 -m venv .venv
            source .venv/bin/activate
            pip install --upgrade pip wheel setuptools
            pip install -r requirements.txt
          '

      - name: Configure environment variables
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cat > /var/www/scraper/new/.env << 'EOL'
            DB_NAME='${DB_NAME}'
            DB_HOST='${DB_HOST}'
            DB_USER='${DB_USER}'
            DB_PASSWORD='${DB_PASSWORD}'
            DB_PORT='${DB_PORT}'
            REQUEST_DELAY='${REQUEST_DELAY}'
            MAX_RETRIES='${MAX_RETRIES}'
            LOGGING_LEVEL='${LOGGING_LEVEL}'
            SCRAPER_PAGES='${SCRAPER_PAGES}'
            BRIGHT_DATA_USERNAME='${BRIGHT_DATA_USERNAME}'
            BRIGHT_DATA_PASSWORD='${BRIGHT_DATA_PASSWORD}'
            EOL

            chmod 600 /var/www/scraper/new/.env
          "

      - name: Rotate deployment
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} '
            if [ -d "/var/www/scraper/current" ]; then
              mv /var/www/scraper/current /var/www/scraper/old
            fi
            mv /var/www/scraper/new /var/www/scraper/current
            rm -rf /var/www/scraper/old
          '